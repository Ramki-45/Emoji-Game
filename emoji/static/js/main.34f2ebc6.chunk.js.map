{"version":3,"sources":["components/NavBar/index.js","components/WinOrLoseCard/index.js","components/EmojiCard/index.js","components/EmojiGame/index.js","App.js","index.js"],"names":["NavbarImg","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_this$props","this","props","score","topScore","_jsxs","className","children","_jsx","src","alt","Component","WinorLossCard","isWon","resetGame","concat","type","onClick","EmojiCard","listEmoji","storeClikedImg","emojiUrl","emojiName","id","EmojiGame","_this","_len","length","args","Array","_key","state","clickedImgList","isGameOver","shuffledEmojisList","emojisList","sort","Math","random","_this$state","includes","setState","newScore","newClicked","_toConsumableArray","prevState","_this2","_this$state2","shuffledList","console","log","map","each","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34f2ebc6.chunk.js","sourcesContent":["// Write your code here.\nimport {Component} from 'react'\nimport './index.css'\n\nclass NavbarImg extends Component {\n  render() {\n    const {score, topScore} = this.props\n\n    return (\n      <nav className=\"nav-bg-container\">\n        <div className=\"emoji-nav-container\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/game-logo-img.png\"\n            alt=\"emoji logo\"\n            className=\"game-logo\"\n          />\n          <h1 className=\"head\">Emoji Game</h1>\n        </div>\n        <div className=\"score-container\">\n          <p className=\"score-txt\">Score: {score}</p>\n          <p className=\"score-txt\">Top Score: {topScore}</p>\n        </div>\n      </nav>\n    )\n  }\n}\nexport default NavbarImg\n","// Write your code here.\nimport NavbarImg from '../NavBar'\nimport './index.css'\n\nconst WinorLossCard = props => {\n  const {score, topScore, isWon, resetGame} = props\n  const onclickPlayAgainButton = () => {\n    resetGame()\n  }\n  return (\n    <div className=\"win-bg-container\">\n      <div className=\"result-card-container\">\n        <div>\n          <h1>{isWon ? 'You Won' : 'You Lose'}</h1>\n          <p>{isWon ? 'Best Score' : 'Score'}</p>\n          <p className=\"score\">{isWon ? `${score}/12` : `${score}/12`}</p>\n          <button\n            className=\"button-play\"\n            type=\"button\"\n            onClick={onclickPlayAgainButton}\n          >\n            Play Again\n          </button>\n        </div>\n        <img\n          src={\n            isWon\n              ? 'https://assets.ccbp.in/frontend/react-js/won-game-img.png'\n              : 'https://assets.ccbp.in/frontend/react-js/lose-game-img.png'\n          }\n          className=\"win-img\"\n          alt=\"win or lose\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default WinorLossCard\n","// Write your code here.\nimport './index.css'\n\nconst EmojiCard = props => {\n  const {listEmoji, storeClikedImg} = props\n  const {emojiUrl, emojiName, id} = listEmoji\n\n  const userImgClicked = () => {\n    storeClikedImg(id)\n  }\n  return (\n    <li className=\"list\">\n      <button className=\"button\" type=\"button\" onClick={userImgClicked}>\n        <img src={emojiUrl} className=\"emoji-img\" alt={emojiName} />\n      </button>\n    </li>\n  )\n}\n\nexport default EmojiCard\n","import {Component} from 'react'\nimport NavbarImg from '../NavBar'\nimport WinorLossCard from '../WinOrLoseCard'\nimport EmojiCard from '../EmojiCard'\nimport './index.css'\n\n/* \nQuick Tip \n\n- Use the below function in the EmojiGame Component to shuffle the emojisList every time when an emoji is clicked.\n\nconst shuffledEmojisList = () => {\n  const {emojisList} = this.props\n  return emojisList.sort(() => Math.random() - 0.5)\n}\n\n*/\n\n// Write your code here.\nclass EmojiGame extends Component {\n  state = {\n    clickedImgList: [],\n    score: 0,\n    topScore: 0,\n    isGameOver: false,\n    isWon: false,\n  }\n\n  shuffledEmojisList = () => {\n    const {emojisList} = this.props\n    return emojisList.sort(() => Math.random() - 0.5)\n  }\n\n  storeClikedImg = id => {\n    const {clickedImgList, score} = this.state\n    const {emojisList} = this.props\n\n    if (clickedImgList.includes(id)) {\n      this.setState({isGameOver: true, isWon: false})\n    } else {\n      const newScore = score + 1\n      const newClicked = [...clickedImgList, id]\n      if (newScore === emojisList.length) {\n        this.setState({\n          score: newScore,\n          clickedImgList: newClicked,\n          isGameOver: true,\n          isWon: true,\n        })\n      } else {\n        this.setState({\n          score: newScore,\n          clickedImgList: newClicked,\n        })\n      }\n    }\n  }\n\n  resetGame = () => {\n    this.setState(prevState => ({\n      topScore:\n        prevState.score > prevState.topScore\n          ? prevState.score\n          : prevState.topScore,\n      score: 0,\n      clickedImgList: [],\n      isGameOver: false,\n      isWon: false,\n    }))\n  }\n\n  render() {\n    const {score, topScore, clickedImgList, isWon, isGameOver} = this.state\n    const shuffledList = this.shuffledEmojisList()\n    console.log(`${isGameOver} game overed`)\n    console.log(`${isWon} game won`)\n    return isGameOver ? (\n      <WinorLossCard\n        isWon={isWon}\n        topScore={topScore}\n        score={score}\n        resetGame={this.resetGame}\n      />\n    ) : (\n      <div className=\"bg-container\">\n        <NavbarImg score={score} topScore={topScore} isWon={isWon} />\n        <ul className=\"emoji-container\">\n          {shuffledList.map(each => (\n            <EmojiCard\n              listEmoji={each}\n              storeClikedImg={this.storeClikedImg}\n              key={each.id}\n            />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default EmojiGame\n","import EmojiGame from './components/EmojiGame'\nimport './App.css'\n\nconst emojisList = [\n  {\n    id: 0,\n    emojiName: 'Face with stuck out tongue',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-img.png',\n  },\n  {\n    id: 1,\n    emojiName: 'Face with head bandage',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-head-bandage-img.png',\n  },\n  {\n    id: 2,\n    emojiName: 'Face with hugs',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-hugs-img.png',\n  },\n  {\n    id: 3,\n    emojiName: 'Face with laughing',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-img.png',\n  },\n  {\n    id: 4,\n    emojiName: 'Laughing face with hand in front of mouth',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-with-hand-infront-mouth-img.png',\n  },\n  {\n    id: 5,\n    emojiName: 'Face with mask',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-mask-img.png',\n  },\n  {\n    id: 6,\n    emojiName: 'Face with silence',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-silence-img.png',\n  },\n  {\n    id: 7,\n    emojiName: 'Face with stuck out tongue and winked eye',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-and-winking-eye-img.png',\n  },\n  {\n    id: 8,\n    emojiName: 'Grinning face with sweat',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/grinning-face-with-sweat-img.png',\n  },\n  {\n    id: 9,\n    emojiName: 'Smiling face with heart eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-heart-eyes-img.png',\n  },\n  {\n    id: 10,\n    emojiName: 'Grinning face',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/grinning-face-img.png',\n  },\n  {\n    id: 11,\n    emojiName: 'Smiling face with star eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-star-eyes-img.png',\n  },\n]\n\nconst App = () => <EmojiGame emojisList={emojisList} />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}